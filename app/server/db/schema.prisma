// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("WRITE_DB_URL")
}

model User {
  id               String            @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  createdAt        DateTime          @default(now())
  updatedAt        DateTime          @updatedAt
  email            String            @unique
  emailVerifiedAt  DateTime?
  fullName         String?
  avatar           String?
  wizardStep       String
  credential       Credential?
  oauthProviders   OAuthProvider[]
  tokens           Token[]
  verificationCode VerificationCode?
  subscription     Subscription?

  @@index([email])
}

model Credential {
  id           String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  passwordHash String
  userId       String   @db.Uuid
  user         User     @relation(fields: [userId], references: [id])

  @@unique([userId])
}

model OAuthProvider {
  id           String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  userId       String   @db.Uuid
  providerName String
  providerId   String
  user         User     @relation(fields: [userId], references: [id])

  @@unique([userId, providerName])
  @@index([providerName, providerId])
}

model Token {
  id        String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  userId    String    @db.Uuid
  type      String
  token     String
  revoked   DateTime?
  user      User      @relation(fields: [userId], references: [id])

  @@unique([token])
}

model VerificationCode {
  id        String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    String   @db.Uuid
  code      String   @db.VarChar(6)
  expiresAt DateTime
  user      User     @relation(fields: [userId], references: [id])

  @@unique([userId])
}

model Subscription {
  id        String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  userId    String    @db.Uuid
  plan      String
  expiresAt DateTime?
  user      User      @relation(fields: [userId], references: [id])

  @@unique([userId])
}
