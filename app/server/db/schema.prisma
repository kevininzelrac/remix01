// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("WRITE_DB_URL")
}

model User {
  id        String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  email    String @unique
  firstname String?
  lastname String?
  avatar String?
  credential Credential?
  oauthProviders OAuthProvider[]
  tokens Token[]
  post Post[]
  @@index([email])
}

model Credential {
  id        String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  passwordHash String
  userId       String  @db.Uuid
  user User @relation(fields: [userId], references: [id])
  @@unique([userId])
}

model OAuthProvider {
  id        String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId       String  @db.Uuid
  providerName String
  providerId   String
  user User @relation(fields: [userId], references: [id])
  @@unique([userId, providerName])
  @@index([providerName, providerId])
}

model Token {
  id      String  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId  String  @db.Uuid
  type    String
  token   String
  revoked DateTime?
  user    User    @relation(fields: [userId], references: [id])
  @@unique([token])
}

model Post {
  id        String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  authorId  String    @db.Uuid
  title     String
  category  String    @default("empty")
  content   String
  published Boolean   @default(false)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  author User         @relation(fields: [authorId], references: [id])
}